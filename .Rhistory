install.packages("phangorn")
getwd()
# selecting species in the different types os soils from the Caatinga
setwd("C:/Users/patri/Google Drive/Papers/trepadeiras caatinga")
climbers<-readRDS(file="allclimbers.Rdata")
View(climbers)
library(magrittr)
library(dismo
library(CoordinateCleaner)
library(monographaR)
library(dplyr)
library(viridis)
library(RColorBrewer)
library(taxize)
data(wrld_simpl)
#library(CoordinateCleaner)
climbers <- subset(climbers, !is.na(Longitude) & !is.na(Latitude))
cleaned_points <- cc_cap(climbers, lon="Longitude", lat="Latitude", species ="Species")
cleaned_points <- cc_cen(cleaned_points, lon = "Longitude", lat = "Latitude", species ="Species")
cleaned_points <- cc_dupl(cleaned_points, lon="Longitude", lat="Latitude", species ="Species")
cleaned_points <- cc_equ(cleaned_points, lon="Longitude", lat="Latitude")
cleaned_points <- cc_inst(cleaned_points, lon="Longitude", lat="Latitude", species ="Species")
cleaned_points <- cc_val(cleaned_points, lon="Longitude", lat="Latitude")
climbers <- cc_sea(cleaned_points, lon="Longitude", lat="Latitude")
library(CoordinateCleaner)
cleaned_points <- cc_cap(climbers, lon="Longitude", lat="Latitude", species ="Species")
cleaned_points <- cc_cen(cleaned_points, lon = "Longitude", lat = "Latitude", species ="Species")
cleaned_points <- cc_dupl(cleaned_points, lon="Longitude", lat="Latitude", species ="Species")
cleaned_points <- cc_equ(cleaned_points, lon="Longitude", lat="Latitude")
cleaned_points <- cc_inst(cleaned_points, lon="Longitude", lat="Latitude", species ="Species")
cleaned_points <- cc_val(cleaned_points, lon="Longitude", lat="Latitude")
climbers <- cc_sea(cleaned_points, lon="Longitude", lat="Latitude")
mapallclimbers<-mapDiversity(climbers, resolution = 1, plot = TRUE,
plot.with.grid = F, legend = T,
export = F, alpha=1,
col=hcl.colors(50, palette = "inferno",rev=T))
library(raster)
library(rgdal)
# transforming the object in spatial polygons dataframe
coordinates(climbers)<-c(2,3)
plot(climbers, add=T)
dev.off()
# reading the shapefile
eco <- readOGR("ecorregioes_seminario2001.shp")
# reading the shapefile
eco <- readOGR("ecorregioes_seminario2001.shx")
# reading the shapefile
eco <- readOGR("biomas_caatinga_ibge_2004.shp")
# reading the shapefile
caatinga <- readOGR("biomas_caatinga_ibge_2004.shp")
rm(eco)
#recortando variaveis pra caatinga
caatinga2 <- stack(mask(crop(climbers,caatinga),caatinga))
env<-getData('worldclim', download=T, var='bio', res=10)
#recortando variaveis pra caatinga
caatinga2 <- stack(mask(crop(mapallclimbers,caatinga),caatinga))
plot(caatinga2)
mapallclimbers<-mapDiversity(climbers, resolution = 1/6, plot = TRUE,
plot.with.grid = F, legend = T,
export = F, alpha=1,
col=hcl.colors(50, palette = "inferno",rev=T))
# reading the data
climbers<-readRDS(file="allclimbers.Rdata") # previously cleaned distribution points
mapallclimbers<-mapDiversity(climbers, resolution = 1/6, plot = TRUE,
plot.with.grid = F, legend = T,
export = F, alpha=1,
col=hcl.colors(50, palette = "inferno",rev=T))
dev.off()
#recortando variaveis pra caatinga
caatinga2 <- stack(mask(crop(mapallclimbers,caatinga),caatinga))
plot(caatinga2)
plot(caatinga2, col=hcl.colors(50, palette = "inferno",rev=T))
# selecting species in the different types os soils from the Caatinga
setwd("C:/Users/patri/Google Drive/Papers/trepadeiras caatinga")
library(magrittr)
library(dismo)
library(CoordinateCleaner)
library(monographaR)
library(dplyr)
library(viridis)
library(RColorBrewer)
library(raster)
library(rgdal)
data(wrld_simpl)
setwd("C:/Users/patri/Google Drive/Papers/Diversificação/climbers")
library(lcvplants)
library(beepr)
library(phangorn)
library(ape)
library(dplyr)
library(arsenal)
library(tidyverse)
# reading the data
climbers<-read.csv("climber_database.csv", stringsAsFactors = F)
h<-readRDS(file="LCVP_climbers.Rdata")
accepted<-subset(h, Status=="accepted")
problems<-subset(h, Status!="accepted")
# counting genera of climbers
genera<-unique(accepted$Genus) # 689 generos, 100 a menos que o database original...
sppclimbers<-as.data.frame(table(unlist(accepted$Genus)))
colnames(sppclimbers)<-c("Genus", "Nr")
sppall<-readRDS(file="sppall.Rdata")
z<-sppall$Genus %in% sppclimbers$Genus
z<-as.numeric(which(z==F))
# excluding these genera from sppall
sppall2<-sppall[-z,]
sppall2<-sppall2[order(sppall2$Genus),]
rownames(sppall2)<-c(1:689)
sppclimbers<-sppclimbers[order(sppclimbers$Genus),]
percent<-data.frame(sppall2$Genus, c(sppclimbers$Nr/sppall2$Nr))
colnames(percent)<-c("Genus","perc_NT_spp")
results2<-readRDS(file="partialresults.Rdata")
View(results2)
View(results2)
View(climbers)
mechs<-subset(climbers, Genus==results2$Genus)[,4]
mechs<-subset(climbers, Genus==as.character(results2$Genus))[,4]
as.character(results2$Genus)
mechs<-subset(climbers, Genus==as.character(results2$Genus))
View(h)
View(accepted)
unique(climbers$Genus)
View(sppclimbers)
# setwd("~/Desktop/Colabs/Patricia_Climbers/climbers")
setwd("C:/Users/patri/Google Drive/Papers/Diversifica??o/climbers")
library(lcvplants)
library(beepr)
library(phangorn)
library(ape)
library(dplyr)
library(arsenal)
library(tidyverse)
# excluding genera with more than one mechanism
genera_list <- unique(climbers$Genus)
to_exclude <- c()
to_include <- data.frame(matrix(nrow=0,ncol=2))
for(i in 1:length(genera_list)){
subset <- climbers[climbers$Genus==genera_list[i],]
if(length(table(subset$CM))==1) {
to_include <- rbind(to_include, c(genera_list[i], subset$CM[1]))
} else {
to_exclude <- c(to_exclude, genera_list[i])
}
}
print(to_exclude) #che
colnames(to_include) <- c("Genus","CM")
table_final <- merge(results2, to_include, by="Genus")
View(table_final)
library(geiger)
?bd.ms()
table_final$Stem_Age[67,]
table_final[67,3]
table_final[67,4]
bd.ms(phy=NULL, table_final[67,3], table_final[67,4],crown=F, epsilon = .5)
bd.ms(phy=NULL, as.character(table_final[67,3]), as.character(table_final[67,4]),crown=F, epsilon = .5)
bd.ms(phy=NULL, tim=as.character(table_final[67,3]), n=as.character(table_final[67,4]),crown=F, epsilon = .5)
bd.ms(phy=NULL, time = as.character(table_final[67,3]), n = as.character(table_final[67,4]),crown=F, epsilon = .5)
bd.ms(phy=NULL, time = as.numeric(table_final[67,3]), n = as.numeric(table_final[67,4]),crown=F, epsilon = .5)
bd.ms(phy=NULL, time = table_final[67,3], n = table_final[67,4],crown=F, epsilon = .5)
bd.ms(phy=NULL, time = as.numeric(table_final[67,3]), n = as.numeric(table_final[67,4]),crown=F, epsilon = .9)
bd.ms(phy=NULL, time = as.numeric(table_final[67,3]), n = as.numeric(table_final[67,4]),crown=F, epsilon = 0)
a<-bd.ms(phy=NULL, time = as.numeric(table_final[67,3]), n = as.numeric(table_final[67,4]),crown=F, epsilon = 0.5)
stem.limits(time = as.numeric(table_final[67,3]), r=a, epsilon = 0.5, CI=.95)
stem.p(phy = NULL,time = as.numeric(table_final[67,3]),n = as.numeric(table_final[67,4]),r=a,epsilon = .5)
time=as.numeric(table_final[,3])
class(table_final[,3])
class(time)
n=as.numeric(table_final[,4])
length(table_final$Genus)
length(table_final)
data.frame(matrix(nrow=0,ncol=2))
data.frame(matrix(nrow=table_final$Genus,ncol=2))
data.frame(matrix(nrow=length(table_final$Genus),ncol=2))
net_div<-data.frame(matrix(nrow=length(table_final$Genus),ncol=2))
net_div<-data.frame(matrix(nrow=length(table_final$Genus),ncol=4))
table_final$Genus[4]
rm(time,n)
net_div<-data.frame(matrix(nrow=length(table_final$Genus),ncol=4))
for (i in 1:length(table_final$Genus)) {
net_div[i,1]<-table_final$Genus[i]
net_div[i,2]<-bd.ms(phy=NULL, time = as.numeric(table_final[i,3]),
n = as.numeric(table_final[i,4]),crown=F, epsilon = 0)
net_div[i,3]<-bd.ms(phy=NULL, time = as.numeric(table_final[i,3]),
n = as.numeric(table_final[i,4]),crown=F, epsilon = 0.5)
net_div[i,4]<-bd.ms(phy=NULL, time = as.numeric(table_final[i,3]),
n = as.numeric(table_final[i,4]),crown=F, epsilon = 0.9)
}
colnames(net_div)<-c("Genus","e=0","e=0.5","e=0.9")
View(net_div)
saveRDS(net_div,file="net_div.Rdata")
rm(a)
stem.limits(time = as.numeric(table_final[6,3]), r=net_div[6,2], epsilon = 0, CI=.95)
stem.limits(time = as.numeric(table_final[6,3]), r=net_div[6,2], epsilon = 0, CI=.95)[2]
stem.limits(time = as.numeric(table_final[6,3]), r=net_div[6,2], epsilon = 0, CI=.95)[1]
limits<-data.frame(matrix(nrow=length(table_final$Genus),ncol=7))
for (i in 1:length(table_final$Genus)){
limits[i,1]<-table_final$Genus[i]
limits[i,2]<-stem.limits(time = as.numeric(table_final[i,3]),
r=net_div[i,2], epsilon = 0, CI=.95)[1]
limits[i,3]<-stem.limits(time = as.numeric(table_final[i,3]),
r=net_div[i,2], epsilon = 0, CI=.95)[2]
limits[i,4]<-stem.limits(time = as.numeric(table_final[i,3]),
r=net_div[i,3], epsilon = 0.5, CI=.95)[1]
limits[i,5]<-stem.limits(time = as.numeric(table_final[i,3]),
r=net_div[i,3], epsilon = 0.5, CI=.95)[2]
limits[i,6]<-stem.limits(time = as.numeric(table_final[i,3]),
r=net_div[i,4], epsilon = 0.9, CI=.95)[1]
limits[i,7]<-stem.limits(time = as.numeric(table_final[i,3]),
r=net_div[i,4], epsilon = 0.9, CI=.95)[2]
}
colnames(limits)<-c("Genus","lb_0","ub_0","lb_0.5","ub_0.5","lb_0.9","ub_0.9")
View(limits)
saveRDS(limits,file="stem_ages_CI95.Rdata")
View(limits)
# setwd("~/Desktop/Colabs/Patricia_Climbers/climbers")
setwd("C:/Users/patri/Google Drive/Papers/Diversificação/climbers")
View(accepted)
# criar coluna dizendo qual grande grupo (monocots, asteridae, rosidae, etc) #
a<-table_final$Genus
a<-accepted$Genus %in% table_final$Genus
a<-as.numeric(which(a==T))
a
# criar coluna dizendo qual grande grupo (monocots, asteridae, rosidae, etc) #
a<-accepted$Genus %in% table_final$Genus
a<-as.numeric(which(a==T))
accepted2<-accepted[a,]
View(accepted2)
# selecionando linhas de accepted que tem os generos listados em table_final
a<-accepted$Genus %in% table_final$Genus
a<-as.numeric(which(a==T))
a<-accepted[a,]
rm(accepted2)
?unique()
View(a)
a<-unique(a[,5])
# selecionando linhas de accepted que tem os generos listados em table_final
a<-accepted$Genus %in% table_final$Genus
a<-as.numeric(which(a==T))
a<-accepted[a,]
a<-unique(a$Genus)
a<-accepted$Genus %in% table_final$Genus
a<-as.numeric(which(a==T))
a<-accepted[a,]
?filter_if()
library(lcvplants)
library(beepr)
library(phangorn)
library(ape)
library(dplyr)
library(arsenal)
library(tidyverse)
library(geiger)
a<-a[,unique(a$Genus)]
unique(a$Genus)
?distinct()
a<-distinct(a)[,5]
a<-accepted$Genus %in% table_final$Genus
a<-as.numeric(which(a==T))
a<-accepted[a,]
a<-distinct(a$Genus)
a<-distinct(a)
?distinct_at()
?distinct()
?unique()
?grepl()
?unique()
?duplicated()
a<-distinct(a,Genus,.keep_all = T)
View(a)
orders<-a[,c("Order","Genus")]
View(orders)
unique(orders$Order)
orders<-accepted$Genus %in% table_final$Genus
orders<-as.numeric(which(orders==T))
orders<-accepted[orders,]
orders<-distinct(orders,Genus,.keep_all = T)
orders<-a[,c("Order","Genus")]
rm(a)
a<-unique(orders$Order)
orders<-order(orders$Genus,decreasing = F)
orders<-accepted$Genus %in% table_final$Genus
orders<-as.numeric(which(orders==T))
orders<-accepted[orders,]
orders<-distinct(orders,Genus,.keep_all = T)
orders<-a[,c("Order","Genus")]
orders<-orders[order(orders$Genus),]
View(orders)
orders<-accepted$Genus %in% table_final$Genus
orders<-as.numeric(which(orders==T))
orders<-accepted[orders,]
orders<-distinct(orders,Genus,.keep_all = T)
orders<-a[,c("Order","Genus")]
orders<-orders[,c("Order","Genus")]
orders<-orders[order(orders$Genus),]
View(orders)
rownames(orders)<-c(1:117)
a<-unique(orders$Order)
table_final2<- table_final %>% add_column(new_col = NA)
View(table_final2)
table_final2<- table_final %>% add_column(Group = NA)
View(table_final2)
table_final<- table_final %>% add_column(Group = NA)
rm(table_final2)
table_final<-table_final[,1:5]
orders<-orders %>% add_column(Group =NA)
length(orders$Genus)
length(orders$Order)
orders$Order=="Piperales"
orders$Order==c("Alismatales", "Asparagales", "Pandanales")
orders$Order==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")
orders$Order==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")
orders$Order
orders$Order==c("Alismatales", "Asparagales", "Pandanales")
orders$Order==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")
orders$Order==c("Gentianales","Asterales","Lamiales","Ericales","Cornales","Solanales","Icacinales")
orders$Order==c("Dilleniales","Caryophyllales","Ranunculales")
for (i in 1:length(orders$Order)) {
if (orders$Order=="Piperales"){
orders[i,3]<-"Magnoliids"
next
}
if (orders$Order==c("Alismatales", "Asparagales", "Pandanales")){
orders[i,3]<-"Monocots"
next
}
if (orders$Order==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")){
orders[i,3]<-"Rosids"
next
}
if (orders$Order==c("Gentianales","Asterales","Lamiales","Ericales","Cornales","Solanales","Icacinales")){
orders[i,3]<-"Asterids"
next
}
if (orders$Order==c("Dilleniales","Caryophyllales","Ranunculales")){
orders[i,3]<-"Other"
}
}
orders<-accepted$Genus %in% table_final$Genus
orders<-as.numeric(which(orders==T))
orders<-accepted[orders,]
orders<-distinct(orders,Genus,.keep_all = T)
orders<-orders[,c("Order","Genus")]
orders<-orders[order(orders$Genus),]
rownames(orders)<-c(1:117)
orders<-orders %>% add_column(Group =NA)
orders[i,]=="Piperales"
orders$Order=="Piperales"
orders$Order==c("Dilleniales","Caryophyllales","Ranunculales")
orders$Order==c("Gentianales","Asterales","Lamiales","Ericales","Cornales","Solanales","Icacinales")
orders<-accepted$Genus %in% table_final$Genus
orders<-as.numeric(which(orders==T))
orders<-accepted[orders,]
orders<-distinct(orders,Genus,.keep_all = T)
orders<-orders[,c("Order","Genus")]
orders<-orders[order(orders$Genus),]
rownames(orders)<-c(1:117)
orders<-orders %>% add_column(Group =NA)
for (i in 1:length(orders$Order)) {
if (orders[i,1]=="Piperales"){
orders[i,3]<-"Magnoliids"
next
}
if (orders[i,]==c("Alismatales", "Asparagales", "Pandanales")){
orders[i,3]<-"Monocots"
next
}
if (orders[i,1]==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")){
orders[i,3]<-"Rosids"
next
}
if (orders[i,1]==c("Gentianales","Asterales","Lamiales","Ericales","Cornales","Solanales","Icacinales")){
orders[i,3]<-"Asterids"
next
}
if (orders[i,1]==c("Dilleniales","Caryophyllales","Ranunculales")){
orders[i,3]<-"Other"
}
}
View(orders)
orders<-accepted$Genus %in% table_final$Genus
orders<-as.numeric(which(orders==T))
orders<-accepted[orders,]
orders<-distinct(orders,Genus,.keep_all = T)
orders<-orders[,c("Order","Genus")]
orders<-orders[order(orders$Genus),]
rownames(orders)<-c(1:117)
orders<-orders %>% add_column(Group =NA)
for (i in 1:length(orders$Order)) {
if (orders[i,1]=="Piperales"){
orders[i,3]<-"Magnoliids"
next
}
if (orders[i,1]==c("Alismatales", "Asparagales", "Pandanales")){
orders[i,3]<-"Monocots"
next
}
if (orders[i,1]==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")){
orders[i,3]<-"Rosids"
next
}
if (orders[i,1]==c("Gentianales","Asterales","Lamiales","Ericales","Cornales","Solanales","Icacinales")){
orders[i,3]<-"Asterids"
next
}
if (orders[i,1]==c("Dilleniales","Caryophyllales","Ranunculales")){
orders[i,3]<-"Other"
}
}
View(orders)
warning()
warnings()
for (i in 1:length(orders$Order)) {
if (orders[i,1]=="Piperales"){
orders[i,3]<-"Magnoliids"
next
}
if (orders[i,1]==c("Alismatales", "Asparagales", "Pandanales")){
orders[i,3]<-"Monocots"
next
}
if (orders[i,1]==c("Celastrales","Malpighiales","Cucurbitales","Fabales","Rosales","Sapindales")){
orders[i,3]<-"Rosids"
next
}
if (orders[i,1]==c("Gentianales","Asterales","Lamiales","Ericales","Cornales","Solanales","Icacinales")){
orders[i,3]<-"Asterids"
next
}
if (orders[i,1]==c("Dilleniales","Caryophyllales","Ranunculales")){
orders[i,3]<-"Other"
}
}
warnings()
class(c("Alismatales", "Asparagales", "Pandanales"))
class(orders$Order)
